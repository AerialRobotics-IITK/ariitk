---
const height = 30;
import Loader from "../components/Loader.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";

const heightCSS = `${height}vw`;
const loaderHeightCSS = `${height / 2}vw`;
export interface Props {
  title: string;
  showcase?: boolean;
  text?: string;
  background?: string;
  showPicture?: boolean;
}

const {
  showPicture = false,
  title,
  showcase = false,
  text = "",
  background = "",
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />

    <!-- The loading of KaTeX is deferred to speed up page rendering -->
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js"
      integrity="sha384-PwRUT/YqbnEjkZO0zZxNqcxACrXe+j766U2amXcgMg5457rve2Y7I6ZJSm2A0mS4"
      crossorigin="anonymous"
    ></script>

    <!-- To automatically render math in text elements, include the auto-render extension: -->
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js"
      integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05"
      crossorigin="anonymous"
      onload="renderMathInElement(document.body);"
    ></script>
    <title>{title}</title>
  </head>
  <body>
    <div class="loader-bg">
      <div class="loader">
        <Loader height={heightCSS} type={"white"} />
      </div>
    </div>
    <aside class="home">
      <a href="/">
        <Loader
          speed={"0ms"}
          rotate={false}
          height={loaderHeightCSS}
          type={"light"}
        />
      </a>
    </aside>
    <slot />
  </body>
  <Footer />
  <script>
    (function () {
      "use strict";

      const select = (el: any, all = false) => {
        el = el.trim();
        if (all) {
          return [...document.querySelectorAll(el)];
        } else {
          return document.querySelector(el);
        }
      };

      /**
       * Preloader
       */
      let preloader = select(".loader-bg");
      if (preloader) {
        window.addEventListener("load", () => {
          preloader.remove();
        });
      }
    })();
  </script>
</html>

<style is:global define:vars={{ loaderHeightCSS }}>
  .container {
    max-width: 1050px;
  }
  .loader-bg {
    position: fixed;
    margin-top: -2rem;
    width: 100%;
    height: 120vh;
    z-index: 999;
    background-color: black;
  }
  .loader {
    position: absolute;
    top: calc(50vh - var(--loaderHeightCSS));
    left: calc(50vw - var(--loaderHeightCSS));
  }
  .filler {
    position: relative;
    width: 100%;
    height: 18rem;
  }
  .left-top-fixed {
    position: fixed;
  }

  aside.home {
    font-size: 17px;
    --cip-gap: clamp(0.8em, 1.65vmax, 1.25em);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
      Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,
      sans-serif;
    max-width: 150px;
    position: fixed;
    bottom: 1.3em;
    right: 1.3em;
    display: flex;
    align-items: center;
    z-index: 1;
    background-color: white;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 1px 1px 3px rgb(0 0 0 / 0.8);
  }

  img {
    max-width: 100%;
  }

  a {
    /* border: 1px solid black; */
  }

  @media (max-width: 900px) {
    .left-top-fixed {
      display: none;
    }
  }
</style>
