---
const height = 30;
import Carousel from "../components/Carousel.astro"
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import Loader from "../components/Loader.astro";
import Showcase from "../components/Showcase.astro";
import Showcase_index from "../components/Showcase_index.astro";
import Analytics from "../components/Analytics.astro";
import "../styles/global.css";

const heightCSS = `${height}vw`;
const loaderHeightCSS = `${height / 2}vw`;
export interface Props {
  title: string;
  showcase?: boolean;
  text?: string;
  background?: string;
  showPicture?: boolean;
}

const {
  showPicture = true,
  title,
  showcase = true,
  text = "",
  background = "",
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=0.9" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <title>{title}</title>
  </head>
  <body>
    <div class="loader-bg">
      <div class="loader">
        <Loader height={heightCSS} type={"white"} />
      </div>
    </div>
    <Header />
    <Analytics />
    {
      showcase && (
        <>
          <div class="filler" />
          <Showcase_index
            text={text}
            showPicture={showPicture}
            heading={title}
            text={""}
            backgroundPic={background}
          />
        </>
      )
    }
    <slot />
  </body>
  <Footer />
  <script>
    (function () {
      "use strict";

      const select = (el: any, all = false) => {
        el = el.trim();
        if (all) {
          return [...document.querySelectorAll(el)];
        } else {
          return document.querySelector(el);
        }
      };

      /**
       * Preloader
       */
      let preloader = select(".loader-bg");
      if (preloader) {
        window.addEventListener("load", () => {
          preloader.remove();
        });
      }
    })();
  </script>
</html>

<style is:global define:vars={{ loaderHeightCSS }}>
  /* * {
		scrollbar-width: none;
	} */
  .filler {
    position: relative;
    width: 100%;
    /* height: 8rem; */
  }

  /* Loader */
  .loader-bg {
    position: fixed;
    width: 100vw;
    height: 100vh;
    z-index: 999;
    background-color: black;
  }
  .loader {
    position: absolute;
    top: calc(50vh - var(--loaderHeightCSS));
    left: calc(50vw - var(--loaderHeightCSS));
  }
</style>
